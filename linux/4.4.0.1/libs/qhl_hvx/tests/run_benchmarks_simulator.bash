#!/bin/bash

Q6VERSION=$1
make clean V=${Q6VERSION}
make V=${Q6VERSION}
LIBS="qhmath_hvx qhdsp_hvx/fft qhdsp_hvx/lms qhblas_hvx"
# with arguments: qhdsp_hvx/image_processing

TEST_TYPE=bench

# Test if Hexagon toolchain is available
HEXAGON_SIM=$DEFAULT_HEXAGON_TOOLS_ROOT/Tools/bin/hexagon-sim

REPORTS_DIR=test_results
mkdir -p $REPORTS_DIR

REPORT_NAME=report-benchmarks-simulator.txt
REPORT=$REPORTS_DIR/$REPORT_NAME

# Start with the new report every time
rm -f $REPORT

echo "Running benchmarks on simulator ..."

if [[ ${Q6VERSION} = "v68" ]];
then
    HEX_SIM_ARG="-m${Q6VERSION}n_1024 --timing --quiet"
elif [[ ${Q6VERSION} = "v66" ]];
then
    HEX_SIM_ARG="-m${Q6VERSION}g_1024 --timing --quiet"
else
    HEX_SIM_ARG="-m${Q6VERSION}a_1024 --timing --quiet"
fi


for tsttype in $TEST_TYPE; do
    for tstlib in $LIBS; do
        for tst in output/sim/$tstlib/${tsttype}_*; do
            echo ---------------------------------------------------
            echo Execute $tst
            $HEXAGON_SIM $HEX_SIM_ARG $tst 2>&1 | grep -v "hexagon-sim" | tee -a $REPORT
        done
    done
done

echo ---------------------------------------------------
echo Execute bench_bkfir_ah_qhl
$HEXAGON_SIM $HEX_SIM_ARG output/sim/qhdsp_hvx/filters/bench_bkfir_ah_qhl 2>&1 | grep -v "hexagon-sim" | tee -a $REPORT

echo ---------------------------------------------------
echo Execute bench_bkfir_aw_qhl
$HEXAGON_SIM $HEX_SIM_ARG output/sim/qhdsp_hvx/filters/bench_bkfir_aw_qhl 2>&1 | grep -v "hexagon-sim" | tee -a $REPORT

# Execution with arguments

for tsttype in $TEST_TYPE; do
    for tst in output/sim/qhdsp_hvx/image_processing/$tsttype*; do
        echo ---------------------------------------------------
        echo Execute $tst with argumetns: 1920 1080 qhdsp_hvx/image_processing/test_data/football1920x1080.bin
        $HEXAGON_SIM $HEX_SIM_ARG $tst -- 1920 1080 qhdsp_hvx/image_processing/test_data/football1920x1080.bin 2>&1 | grep -v "hexagon-sim" | tee -a $REPORT
    done
done

WIN_SIZES="128 256 512 1024 2048"

# 2D fixed point 8x32 FFT/IFFT tests
for window_size in $WIN_SIZES; do
    $HEXAGON_SIM $HEX_SIM_ARG output/sim/qhdsp_hvx/fft/test_bench_fxp_2d_fft_real_HVX_qhl -- -iqhdsp_hvx/fft/test_data/2D_FFT_inputs/fft2D_fxp_real_test_data_HVX_in$window_size\x$window_size.dat -rqhdsp_hvx/fft/test_data/2D_FFT_refs/fft2D_fxp_real_test_data_HVX_out$window_size\x$window_size\_REF.dat -w$window_size
done

# 2D single-precision float-point FFT/IFFT tests
for window_size in $WIN_SIZES; do
    $HEXAGON_SIM $HEX_SIM_ARG output/sim/qhdsp_hvx/fft/test_bench_float_2d_fft_real_HVX_qhl -- -iqhdsp_hvx/fft/test_data/2D_FFT_inputs/fft2D_float_real_test_data_HVX_in$window_size\x$window_size.dat -rqhdsp_hvx/fft/test_data/2D_FFT_refs/fft2D_float_real_test_data_HVX_out$window_size\x$window_size\_REF.dat -w$window_size
done

# 2D half-precision float-point FFT/IFFT tests
for window_size in $WIN_SIZES; do
    $HEXAGON_SIM $HEX_SIM_ARG output/sim/qhdsp_hvx/fft/test_bench_half_float_2d_fft_real_HVX_qhl -- -iqhdsp_hvx/fft/test_data/2D_FFT_inputs/fft2D_float_real_test_data_HVX_in$window_size\x$window_size.dat -rqhdsp_hvx/fft/test_data/2D_FFT_refs/fft2D_float_real_test_data_HVX_out$window_size\x$window_size\_REF.dat -w$window_size
done

TAP_SIZES="256 512 1024 2048 4096"

echo "Benchmark for qhdsp_hvx_bkfir_af function:"
for tap_size in $TAP_SIZES; do
      $HEXAGON_SIM $HEX_SIM_ARG output/sim/qhdsp_hvx/filters/bench_bkfir_af_qhl -- 4096 $tap_size 2>&1 | grep -v "hexagon-sim" | tee -a $REPORT
done

echo "Done." >> $REPORT

# Delete pmustats file generated by simulator
rm -f pmu_statsfile.txt

echo
echo "Done! Report is generated in" $REPORT
