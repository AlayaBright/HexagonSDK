// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_table.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_msg_5ftable_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_msg_5ftable_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_msg_5ftable_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_msg_5ftable_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_msg_5ftable_2eproto;
namespace MsgTable {
class MsgTable;
class MsgTableDefaultTypeInternal;
extern MsgTableDefaultTypeInternal _MsgTable_default_instance_;
class TableEntry;
class TableEntryDefaultTypeInternal;
extern TableEntryDefaultTypeInternal _TableEntry_default_instance_;
}  // namespace MsgTable
PROTOBUF_NAMESPACE_OPEN
template<> ::MsgTable::MsgTable* Arena::CreateMaybeMessage<::MsgTable::MsgTable>(Arena*);
template<> ::MsgTable::TableEntry* Arena::CreateMaybeMessage<::MsgTable::TableEntry>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace MsgTable {

// ===================================================================

class TableEntry :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgTable.TableEntry) */ {
 public:
  TableEntry();
  virtual ~TableEntry();

  TableEntry(const TableEntry& from);
  TableEntry(TableEntry&& from) noexcept
    : TableEntry() {
    *this = ::std::move(from);
  }

  inline TableEntry& operator=(const TableEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline TableEntry& operator=(TableEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TableEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TableEntry* internal_default_instance() {
    return reinterpret_cast<const TableEntry*>(
               &_TableEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TableEntry& a, TableEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(TableEntry* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TableEntry* New() const final {
    return CreateMaybeMessage<TableEntry>(nullptr);
  }

  TableEntry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TableEntry>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TableEntry& from);
  void MergeFrom(const TableEntry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TableEntry* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgTable.TableEntry";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_5ftable_2eproto);
    return ::descriptor_table_msg_5ftable_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCallsiteAddrFieldNumber = 1,
    kRodataAddrFieldNumber = 2,
  };
  // uint32 callsiteAddr = 1;
  void clear_callsiteaddr();
  ::PROTOBUF_NAMESPACE_ID::uint32 callsiteaddr() const;
  void set_callsiteaddr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_callsiteaddr() const;
  void _internal_set_callsiteaddr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 rodataAddr = 2;
  void clear_rodataaddr();
  ::PROTOBUF_NAMESPACE_ID::uint32 rodataaddr() const;
  void set_rodataaddr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rodataaddr() const;
  void _internal_set_rodataaddr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgTable.TableEntry)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 callsiteaddr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rodataaddr_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5ftable_2eproto;
};
// -------------------------------------------------------------------

class MsgTable :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgTable.MsgTable) */ {
 public:
  MsgTable();
  virtual ~MsgTable();

  MsgTable(const MsgTable& from);
  MsgTable(MsgTable&& from) noexcept
    : MsgTable() {
    *this = ::std::move(from);
  }

  inline MsgTable& operator=(const MsgTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgTable& operator=(MsgTable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgTable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTable* internal_default_instance() {
    return reinterpret_cast<const MsgTable*>(
               &_MsgTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MsgTable& a, MsgTable& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgTable* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgTable* New() const final {
    return CreateMaybeMessage<MsgTable>(nullptr);
  }

  MsgTable* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgTable>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgTable& from);
  void MergeFrom(const MsgTable& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTable* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgTable.MsgTable";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_5ftable_2eproto);
    return ::descriptor_table_msg_5ftable_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntriesFieldNumber = 1,
  };
  // repeated .MsgTable.TableEntry entries = 1;
  int entries_size() const;
  private:
  int _internal_entries_size() const;
  public:
  void clear_entries();
  ::MsgTable::TableEntry* mutable_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTable::TableEntry >*
      mutable_entries();
  private:
  const ::MsgTable::TableEntry& _internal_entries(int index) const;
  ::MsgTable::TableEntry* _internal_add_entries();
  public:
  const ::MsgTable::TableEntry& entries(int index) const;
  ::MsgTable::TableEntry* add_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTable::TableEntry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:MsgTable.MsgTable)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTable::TableEntry > entries_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5ftable_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TableEntry

// uint32 callsiteAddr = 1;
inline void TableEntry::clear_callsiteaddr() {
  callsiteaddr_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TableEntry::_internal_callsiteaddr() const {
  return callsiteaddr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TableEntry::callsiteaddr() const {
  // @@protoc_insertion_point(field_get:MsgTable.TableEntry.callsiteAddr)
  return _internal_callsiteaddr();
}
inline void TableEntry::_internal_set_callsiteaddr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  callsiteaddr_ = value;
}
inline void TableEntry::set_callsiteaddr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_callsiteaddr(value);
  // @@protoc_insertion_point(field_set:MsgTable.TableEntry.callsiteAddr)
}

// uint32 rodataAddr = 2;
inline void TableEntry::clear_rodataaddr() {
  rodataaddr_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TableEntry::_internal_rodataaddr() const {
  return rodataaddr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TableEntry::rodataaddr() const {
  // @@protoc_insertion_point(field_get:MsgTable.TableEntry.rodataAddr)
  return _internal_rodataaddr();
}
inline void TableEntry::_internal_set_rodataaddr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rodataaddr_ = value;
}
inline void TableEntry::set_rodataaddr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rodataaddr(value);
  // @@protoc_insertion_point(field_set:MsgTable.TableEntry.rodataAddr)
}

// -------------------------------------------------------------------

// MsgTable

// repeated .MsgTable.TableEntry entries = 1;
inline int MsgTable::_internal_entries_size() const {
  return entries_.size();
}
inline int MsgTable::entries_size() const {
  return _internal_entries_size();
}
inline void MsgTable::clear_entries() {
  entries_.Clear();
}
inline ::MsgTable::TableEntry* MsgTable::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:MsgTable.MsgTable.entries)
  return entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTable::TableEntry >*
MsgTable::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:MsgTable.MsgTable.entries)
  return &entries_;
}
inline const ::MsgTable::TableEntry& MsgTable::_internal_entries(int index) const {
  return entries_.Get(index);
}
inline const ::MsgTable::TableEntry& MsgTable::entries(int index) const {
  // @@protoc_insertion_point(field_get:MsgTable.MsgTable.entries)
  return _internal_entries(index);
}
inline ::MsgTable::TableEntry* MsgTable::_internal_add_entries() {
  return entries_.Add();
}
inline ::MsgTable::TableEntry* MsgTable::add_entries() {
  // @@protoc_insertion_point(field_add:MsgTable.MsgTable.entries)
  return _internal_add_entries();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTable::TableEntry >&
MsgTable::entries() const {
  // @@protoc_insertion_point(field_list:MsgTable.MsgTable.entries)
  return entries_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgTable

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_msg_5ftable_2eproto
